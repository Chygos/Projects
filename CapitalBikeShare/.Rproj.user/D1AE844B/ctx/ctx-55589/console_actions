{
    "type": [
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2
    ],
    "data": [
        "        legend.key.size = unit(0.8, 'in'),",
        "+ ",
        "        legend.position = 'top') +",
        "+ ",
        "  labs(title='Start Stations Average Hourly Rides grouped by number of bikes', x='Longitude', y='Latitude') +",
        "+ ",
        "  scale_color_manual(values=c('<10'='darkblue', '10-15'='orange', '16+'='red')) +",
        "+ ",
        "  guides(size='none', color=guide_legend(title='Number of Bikes bin'))",
        "> ",
        "# plot",
        "> ",
        "station_hourly_demand %>%",
        "+ ",
        "  ggplot() +",
        "+ ",
        "  geom_point(aes(x=start_long, y=start_lat, color=num_bike_bin, size=hourly_demand),alpha=0.5) +",
        "+ ",
        "  theme_light() +",
        "+ ",
        "  theme(panel.grid = element_blank(),",
        "+ ",
        "        legend.key.size = unit(0.8, 'cm'),",
        "+ ",
        "        legend.position = 'top') +",
        "+ ",
        "  labs(title='Start Stations Average Hourly Rides grouped by number of bikes', x='Longitude', y='Latitude') +",
        "+ ",
        "  scale_color_manual(values=c('<10'='darkblue', '10-15'='orange', '16+'='red')) +",
        "+ ",
        "  guides(size='none', color=guide_legend(title='Number of Bikes bin'))",
        "> ",
        "# Bike demand per hour by station",
        "> ",
        "station_hourly_demand <- bike_rides %>%",
        "+ ",
        "  group_by(hire_hour, date, terminal_number, start_station_name, start_lat, start_long) %>%",
        "+ ",
        "  summarise(total=n()) %>%",
        "+ ",
        "  group_by(hire_hour, terminal_number, start_station_name, start_lat, start_long) %>%",
        "+ ",
        "  summarise(total=n()) %>% view(.) ",
        "\u001B[1m\u001B[33mError\u001B[39m in \u001B[38;5;250m`group_by()`\u001B[39m:\u001B[22m\n\u001B[38;5;250m\u001B[33m!\u001B[38;5;250m Must group by variables found in `.data`.\n\u001B[31m✖\u001B[38;5;250m Column `date` is not found.\u001B[39m\nBacktrace:\n\u001B[90m 1. \u001B[39m... %>% view(.)\n\u001B[90m 8. \u001B[39m\u001B[38;5;250m\u001B[1m\u001B[94mdplyr:::group_by.data.frame(\u001B[38;5;250m\u001B[22m\u001B[39m., hire_hour, date, terminal_number, start_station_name, start_lat, start_long\u001B[38;5;250m\u001B[1m\u001B[94m)\u001B[38;5;250m\u001B[22m\u001B[39m\n",
        "> ",
        "# Bike demand per hour by station",
        "> ",
        "station_hourly_demand <- bike_rides %>%",
        "+ ",
        "  group_by(hire_hour, hire_date, terminal_number, start_station_name, start_lat, start_long) %>%",
        "+ ",
        "  summarise(total=n()) %>%",
        "+ ",
        "  group_by(hire_hour, terminal_number, start_station_name, start_lat, start_long) %>%",
        "+ ",
        "  summarise(total=n()) %>% view(.) ",
        "> ",
        "gc()",
        "           used  (Mb) gc trigger   (Mb)  max used   (Mb)\nNcells  3095032 165.3    7519053  401.6   9398816  502.0\nVcells 53788780 410.4  158907125 1212.4 158907125 1212.4\n",
        "> ",
        "# Bike demand per hour by station",
        "> ",
        "station_hourly_demand <- bike_rides %>%",
        "+ ",
        "  group_by(hire_hour, hire_date, terminal_number, start_station_name, start_lat, start_long) %>%",
        "+ ",
        "  summarise(total=n()) %>%",
        "+ ",
        "  group_by(hire_hour, terminal_number, start_station_name, start_lat, start_long) %>%",
        "+ ",
        "  summarise(total=n()) %>% head() %>% view(.) ",
        "> ",
        "# Bike demand per hour by station",
        "> ",
        "station_hourly_demand <- bike_rides %>%",
        "+ ",
        "  group_by(hire_hour, hire_date, terminal_number, start_station_name, start_lat, start_long) %>%",
        "+ ",
        "  summarise(total=n()) %>%",
        "+ ",
        "  group_by(hire_hour, terminal_number, start_station_name, start_lat, start_long) %>%",
        "+ ",
        "  summarise(total=n())",
        "> ",
        "View(station_hourly_demand)",
        "> ",
        "# Bike demand per hour by station",
        "> ",
        "station_hourly_demand <- bike_rides %>%",
        "+ ",
        "  group_by(hire_hour, terminal_number, start_station_name, start_lat, start_long) %>%",
        "+ ",
        "  summarise(total=n()) %>%",
        "+ ",
        "  group_by(terminal_number, start_station_name, start_lat, start_long) %>%",
        "+ ",
        "  summarise(hourly_demand= as.integer(mean(total))) %>%",
        "+ ",
        "  inner_join(select(stations, terminal_number, number_of_bikes), by='terminal_number') %>%",
        "+ ",
        "  # bin by number of bikes in each station",
        "+ ",
        "  mutate(num_bike_bin=cut(number_of_bikes, breaks=c(-1,10,16,40), labels=c('<10', '10-15', '16+'), ",
        "+ ",
        "                          right=FALSE, ordered_result=T)) %>%",
        "+ ",
        "  # number of bikes hired per hourly demand",
        "+ ",
        "  mutate(bike_per_hour = if_else(number_of_bikes == 0, 0, hourly_demand/number_of_bikes)) %>%",
        "+ ",
        "  ungroup()",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "# plot",
        "> ",
        "station_hourly_demand %>%",
        "+ ",
        "  ggplot() +",
        "+ ",
        "  geom_point(aes(x=start_long, y=start_lat, color=num_bike_bin, size=hourly_demand),alpha=0.5) +",
        "+ ",
        "  theme_light() +",
        "+ ",
        "  theme(panel.grid = element_blank(),",
        "+ ",
        "        legend.key.size = unit(0.8, 'cm'),",
        "+ ",
        "        legend.position = 'top') +",
        "+ ",
        "  labs(title='Start Stations Average Hourly Rides grouped by number of bikes', x='Longitude', y='Latitude') +",
        "+ ",
        "  scale_color_manual(values=c('<10'='darkblue', '10-15'='orange', '16+'='red')) +",
        "+ ",
        "  guides(size='none', color=guide_legend(title='Number of Bikes bin'))",
        "> ",
        "",
        "> ",
        "# Bike demand per hour by station",
        "> ",
        "#station_hourly_demand <- ",
        "> ",
        "bike_rides %>%",
        "+ ",
        "  group_by(hire_hour, hire_date, terminal_number, start_station_name, start_lat, start_long) %>%",
        "+ ",
        "  summarise(total=n()) ",
        "> ",
        "# Bike demand per hour by station",
        "> ",
        "station_hourly_demand <- bike_rides %>%",
        "+ ",
        "  group_by(hire_hour, hire_date, terminal_number, start_station_name, start_lat, start_long) %>%",
        "+ ",
        "  summarise(total=n()) ",
        "> ",
        "head(station_hourly_demand)",
        "> ",
        "# Bike demand per hour by station",
        "> ",
        "station_hourly_demand <- bike_rides %>%",
        "+ ",
        "  group_by(hire_hour, hire_date, terminal_number, start_station_name, start_lat, start_long) %>%",
        "+ ",
        "  summarise(total=n()) %>%",
        "+ ",
        "  group_by(hire_hour, terminal_number, start_station_name, start_lat, start_long) %>%",
        "+ ",
        "  summarise(hourly_demand= as.integer(mean(total))) ",
        "> ",
        "View(station_hourly_demand)",
        "> ",
        "# Bike demand per hour by station",
        "> ",
        "station_hourly_demand <- bike_rides %>%",
        "+ ",
        "  # total demand per hour of a particular date",
        "+ ",
        "  group_by(hire_hour, hire_date, terminal_number, start_station_name, start_lat, start_long) %>%",
        "+ ",
        "  summarise(total=n()) %>%",
        "+ ",
        "  # average demand per hour",
        "+ ",
        "  group_by(hire_hour, terminal_number, start_station_name, start_lat, start_long) %>%",
        "+ ",
        "  summarise(hourly_demand= mean(total)) %>%",
        "+ ",
        "  # average demand per station",
        "+ ",
        "  group_by(terminal_number, start_station_name, start_lat, start_long) %>%",
        "+ ",
        "  summarise(hourly_demand=as.integer(mean(hourly_demand)))  ",
        "> ",
        "bike_rides %>%",
        "+ ",
        "  group_by(hire_hour, hire_wkday, hire_date) %>%",
        "+ ",
        "  summarise(total=n()) ",
        "> ",
        "bike_rides %>%",
        "+ ",
        "  group_by(hire_hour, hire_wkday, hire_date) %>%",
        "+ ",
        "  summarise(total=n()) %>% view(.)",
        "> ",
        "bike_rides %>%",
        "+ ",
        "  group_by(hire_hour, hire_wkday, hire_date) %>%",
        "+ ",
        "  summarise(total=n()) %>%",
        "+ ",
        "  group_by(hire_hour, hire_wkday) %>%",
        "+ ",
        "  summarise(hour_demand=as.integer(mean(total))) %>%",
        "+ ",
        "  ggplot(aes(x=hire_hour, y=hire_wkday, fill=hour_demand)) +",
        "+ ",
        "  geom_tile(alpha=0.9,linejoin = 'round') + ",
        "+ ",
        "  geom_text(aes(label=hour_demand), lineheight=2, size=3.2) +",
        "+ ",
        "  scale_fill_gradientn(colors = hcl.colors(25, 'Heat', rev=T)) +",
        "+ ",
        "  scale_x_continuous(breaks = seq(0,23,1)) +",
        "+ ",
        "  theme_light() +",
        "+ ",
        "  theme(legend.position = 'none', panel.grid = element_blank(),",
        "+ ",
        "        line = element_line(size=1)) +",
        "+ ",
        "  labs(title='Average Hourly Rides per Day of the Week', x='Hour', y='Day of Week')",
        "> ",
        "sum(station_hourly_demand$hourly_demand)",
        "[1] 614\n",
        "> ",
        "mean(station_hourly_demand$hourly_demand)",
        "[1] 1.030201\n",
        "> ",
        "View(total_monthly_rides)",
        "> ",
        "# Bike demand per hour by station",
        "> ",
        "station_hourly_demand <- bike_rides %>%",
        "+ ",
        "  # total demand per hour of a particular date",
        "+ ",
        "  group_by(hire_week=floor_date(hire_date,'week'), terminal_number, start_station_name, start_lat, start_long) %>%",
        "+ ",
        "  summarise(total=n()) ",
        "> ",
        "View(station_hourly_demand)",
        "> ",
        "gc()",
        "           used  (Mb) gc trigger   (Mb)  max used   (Mb)\nNcells  3260155 174.2   10561710  564.1  13202137  705.1\nVcells 55262203 421.7  158907125 1212.4 158907125 1212.4\n",
        "> ",
        "# Bike demand per hour by station",
        "> ",
        "station_hourly_demand <- bike_rides %>%",
        "+ ",
        "  # total rides per week",
        "+ ",
        "  group_by(hire_week=floor_date(hire_date,'week'), terminal_number, start_station_name, start_lat, start_long) %>%",
        "+ ",
        "  summarise(total=n()) %>%",
        "+ ",
        "  # average demand by station per week",
        "+ ",
        "  group_by(terminal_number, start_station_name, start_lat, start_long) %>%",
        "+ ",
        "  summarise(hourly_demand= mean(total)) ",
        "> ",
        "View(station_hourly_demand)",
        "> ",
        "# Bike demand per hour by station",
        "> ",
        "station_hourly_demand <- bike_rides %>%",
        "+ ",
        "  # total rides per week",
        "+ ",
        "  group_by(hire_week=floor_date(hire_date,'week'), terminal_number, start_station_name, start_lat, start_long) %>%",
        "+ ",
        "  summarise(total=n()) %>%",
        "+ ",
        "  # average demand by station per week",
        "+ ",
        "  group_by(terminal_number, start_station_name, start_lat, start_long) %>%",
        "+ ",
        "  summarise(weekly_demand= as.integer(mean(total))) %>%",
        "+ ",
        "  inner_join(select(stations, terminal_number, number_of_bikes), by='terminal_number') ",
        "> ",
        "View(station_hourly_demand)",
        "> ",
        "# Bike demand per hour by station",
        "> ",
        "station_hourly_demand <- bike_rides %>%",
        "+ ",
        "  # total rides per week",
        "+ ",
        "  group_by(hire_week=floor_date(hire_date,'day'), terminal_number, start_station_name, start_lat, start_long) %>%",
        "+ ",
        "  summarise(total=n()) ",
        "> ",
        "View(station_hourly_demand)",
        "> ",
        "# Bike demand per hour by station",
        "> ",
        "station_hourly_demand <- bike_rides %>%",
        "+ ",
        "  # total rides per week",
        "+ ",
        "  group_by(hire_week=floor_date(hire_date,'week'), terminal_number, start_station_name, start_lat, start_long) %>%",
        "+ ",
        "  summarise(total=n()) %>%",
        "+ ",
        "  # average demand by station per week",
        "+ ",
        "  group_by(terminal_number, start_station_name, start_lat, start_long) %>%",
        "+ ",
        "  summarise(weekly_demand= as.integer(mean(total))) %>%",
        "+ ",
        "  inner_join(select(stations, terminal_number, number_of_bikes), by='terminal_number') %>%",
        "+ ",
        "  # bin by number of bikes in each station",
        "+ ",
        "  mutate(num_bike_bin=cut(number_of_bikes, breaks=c(-1,10,16,40), labels=c('<10', '10-15', '16+'), ",
        "+ ",
        "                          right=FALSE, ordered_result=T)) %>%",
        "+ ",
        "  ungroup()",
        "> ",
        "View(station_hourly_demand)",
        "> ",
        "# plot",
        "> ",
        "station_hourly_demand %>%",
        "+ ",
        "  ggplot() +",
        "+ ",
        "  geom_point(aes(x=start_long, y=start_lat, color=num_bike_bin, size=hourly_demand),alpha=0.5) +",
        "+ ",
        "  theme_light() +",
        "+ ",
        "  theme(panel.grid = element_blank(),",
        "+ ",
        "        legend.key.size = unit(0.8, 'cm'),",
        "+ ",
        "        legend.position = 'top') +",
        "+ ",
        "  labs(title='Start Stations Average Weekly Rides grouped by number of bikes', x='Longitude', y='Latitude') +",
        "+ ",
        "  scale_color_manual(values=c('<10'='darkblue', '10-15'='orange', '16+'='red')) +",
        "+ ",
        "  guides(size='none', color=guide_legend(title='Number of Bikes bin'))",
        "Error in FUN(X[[i]], ...) : object 'hourly_demand' not found\n",
        "> ",
        "# plot",
        "> ",
        "station_hourly_demand %>%",
        "+ ",
        "  ggplot() +",
        "+ ",
        "  geom_point(aes(x=start_long, y=start_lat, color=num_bike_bin, size=weekly_demand),alpha=0.5) +",
        "+ ",
        "  theme_light() +",
        "+ ",
        "  theme(panel.grid = element_blank(),",
        "+ ",
        "        legend.key.size = unit(0.8, 'cm'),",
        "+ ",
        "        legend.position = 'top') +",
        "+ ",
        "  labs(title='Start Stations Average Weekly Rides grouped by number of bikes', x='Longitude', y='Latitude') +",
        "+ ",
        "  scale_color_manual(values=c('<10'='darkblue', '10-15'='orange', '16+'='red')) +",
        "+ ",
        "  guides(size='none', color=guide_legend(title='Number of Bikes bin'))",
        "> ",
        "# average bike demand per month of the year",
        "> ",
        "bike_rides %>%",
        "+ ",
        "  group_by(hire_month, hire_date=floor_date(hire_date, 'month')) %>%",
        "+ ",
        "  summarise(total=n())",
        "> ",
        "# average bike demand per month of the year",
        "> ",
        "bike_rides %>%",
        "+ ",
        "  group_by(hire_month, hire_date) %>%",
        "+ ",
        "  summarise(total=n())",
        "> ",
        "# average bike demand per month of the year",
        "> ",
        "bike_rides %>%",
        "+ ",
        "  group_by(hire_week, hire_date) %>%",
        "+ ",
        "  summarise(total=n())",
        "> ",
        "# average bike demand per month of the year",
        "> ",
        "bike_rides %>%",
        "+ ",
        "  group_by(hire_date,hire_week) %>%",
        "+ ",
        "  summarise(total=n())",
        "> ",
        "# average bike demand per month of the year",
        "> ",
        "bike_rides %>%",
        "+ ",
        "  group_by(hire_date,hire_week, terminal_number) %>%",
        "+ ",
        "  summarise(total=n())",
        "> ",
        "# average bike demand per month of the year",
        "> ",
        "bike_rides %>%",
        "+ ",
        "  group_by(hire_month, hire_date) %>%",
        "+ ",
        "  summarise(total=n()) ",
        "> ",
        "# average bike demand per month of the year",
        "> ",
        "bike_rides %>%",
        "+ ",
        "  group_by(hire_month, hire_date=floor_date(hire_date, 'month')) %>%",
        "+ ",
        "  summarise(total=n()) ",
        "> ",
        "# average bike demand per month of the year",
        "> ",
        "bike_rides %>%",
        "+ ",
        "  group_by(hire_month, hire_date) %>%",
        "+ ",
        "  summarise(total=n()) ",
        "> ",
        "# average bike demand per month of the year",
        "> ",
        "bike_rides %>%",
        "+ ",
        "  group_by(hire_month, hire_date) %>%",
        "+ ",
        "  summarise(total=n()) %>%",
        "+ ",
        "  group_by(hire_month) %>%",
        "+ ",
        "  summarise(monthly_average = mean(total)) %>%",
        "+ ",
        "  # plot",
        "+ ",
        "  ggplot(aes(hire_month, monthly_average/1000)) + ",
        "+ ",
        "  geom_line(group=1, alpha=0.6, lty=1) +",
        "+ ",
        "  geom_point(alpha=0.5) +",
        "+ ",
        "  geom_text(aes(x=hire_month, y=monthly_average/1000, label=paste0(round(monthly_average/1000,2),'k'), ",
        "+ ",
        "                vjust=-0.4, hjust=-0.1), size=3.2, color='red') + ",
        "+ ",
        "  theme_light() +",
        "+ ",
        "  theme(axis.text.x = element_text(angle=0), ",
        "+ ",
        "        panel.grid = element_blank(), ",
        "+ ",
        "        axis.text.y = element_blank(), ",
        "+ ",
        "        axis.ticks.y=element_blank()) +",
        "+ ",
        "  labs(title='Average Monthly Demand (In Thousands)', x='Month', y='Monthly Demand')",
        "> ",
        "1.95*1000",
        "[1] 1950\n",
        "> ",
        "# average bike rides per month of the year",
        "> ",
        "bike_rides %>%",
        "+ ",
        "  group_by(hire_month, hire_date) %>%",
        "+ ",
        "  summarise(total=n()) %>%",
        "+ ",
        "  group_by(hire_month) %>%",
        "+ ",
        "  summarise(monthly_average = mean(total)) %>%",
        "+ ",
        "  # plot",
        "+ ",
        "  ggplot(aes(hire_month, monthly_average/1000)) + ",
        "+ ",
        "  geom_line(group=1, alpha=0.6, lty=1) +",
        "+ ",
        "  geom_point(alpha=0.5) +",
        "+ ",
        "  geom_text(aes(x=hire_month, y=monthly_average/1000, label=paste0(round(monthly_average/1000,2),'k'), ",
        "+ ",
        "                vjust=-0.4, hjust=-0.1), size=3.2, color='red') + ",
        "+ ",
        "  theme_light() +",
        "+ ",
        "  theme(axis.text.x = element_text(angle=0), ",
        "+ ",
        "        panel.grid = element_blank(), ",
        "+ ",
        "        axis.text.y = element_blank(), ",
        "+ ",
        "        axis.ticks.y=element_blank()) +",
        "+ ",
        "  labs(title='Average Monthly Rides (In Thousands)', x='Month', y='Monthly Demand')",
        "> ",
        "# Bike demand per hour by station",
        "> ",
        "station_weekly_demand <- bike_rides %>%",
        "+ ",
        "  # total rides per week",
        "+ ",
        "  group_by(hire_week=floor_date(hire_date,'week'), terminal_number, start_station_name, start_lat, start_long) %>%",
        "+ ",
        "  summarise(total=n()) ",
        "> ",
        "View(station_weekly_demand)",
        "> ",
        "# Bike demand per hour by station",
        "> ",
        "station_weekly_demand <- bike_rides %>%",
        "+ ",
        "  # total rides per week",
        "+ ",
        "  group_by(hire_week=floor_date(hire_date,'week'), terminal_number, start_station_name, start_lat, start_long) %>%",
        "+ ",
        "  summarise(total=n()) %>%",
        "+ ",
        "  # average demand by station per week",
        "+ ",
        "  group_by(terminal_number, start_station_name, start_lat, start_long) %>%",
        "+ ",
        "  summarise(weekly_demand= as.integer(mean(total))) %>%",
        "+ ",
        "  inner_join(select(stations, terminal_number, number_of_bikes), by='terminal_number') %>%",
        "+ ",
        "  # bin by number of bikes in each station",
        "+ ",
        "  mutate(num_bike_bin=cut(number_of_bikes, breaks=c(-1,10,16,40), labels=c('<10', '10-15', '16+'), ",
        "+ ",
        "                          right=FALSE, ordered_result=T)) %>%",
        "+ ",
        "  ungroup()",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "# plot",
        "> ",
        "station_weekly_demand %>%",
        "+ ",
        "  ggplot() +",
        "+ ",
        "  geom_point(aes(x=start_long, y=start_lat, color=num_bike_bin, size=weekly_demand),alpha=0.5) +",
        "+ ",
        "  theme_light() +",
        "+ ",
        "  theme(panel.grid = element_blank(),",
        "+ ",
        "        legend.key.size = unit(0.8, 'cm'),",
        "+ ",
        "        legend.position = 'top') +",
        "+ ",
        "  labs(title='Start Stations Average Weekly Rides grouped by number of bikes', x='Longitude', y='Latitude') +",
        "+ ",
        "  scale_color_manual(values=c('<10'='darkblue', '10-15'='orange', '16+'='red')) +",
        "+ ",
        "  guides(size='none', color=guide_legend(title='Number of Bikes bin'))",
        "> ",
        "",
        "> ",
        "# Weekly demand by station (Top 10)",
        "> ",
        "station_weekly_demand %>%",
        "+ ",
        "  slice_max(order_by = weekly_demand, n=10) %>%",
        "+ ",
        "  select(start_station_name, terminal_number, weekly_demand, number_of_bikes) ",
        "> ",
        "# Hourly demand by station (Least 10)",
        "> ",
        "station_weekly_demand %>%",
        "+ ",
        "  slice_min(order_by = weekly_demand, n=10) %>%",
        "+ ",
        "  select(start_station_name, terminal_number, weekly_demand, number_of_bikes) ",
        "> ",
        "# Hourly demand by station (Least 10)",
        "> ",
        "station_weekly_demand %>%",
        "+ ",
        "  slice_min(order_by = weekly_demand, n=10) %>%",
        "+ ",
        "  select(start_station_name, terminal_number, weekly_demand, number_of_bikes) %>%",
        "+ ",
        "  head(10)",
        "> ",
        "bike_rides %>%",
        "+ ",
        "  group_by(hire_hour, hire_wkday, hire_date) %>%",
        "+ ",
        "  summarise(total=n()) ",
        "> ",
        "# Hourly rides by day of the week ",
        "> ",
        "bike_rides %>%",
        "+ ",
        "  group_by(hire_hour, hire_wkday, hire_date) %>%",
        "+ ",
        "  summarise(total=n()) %>%",
        "+ ",
        "  group_by(hire_hour, hire_wkday) %>%",
        "+ ",
        "  summarise(hour_demand=as.integer(mean(total))) %>%",
        "+ ",
        "  ggplot(aes(x=hire_hour, y=hire_wkday, fill=hour_demand)) +",
        "+ ",
        "  geom_tile(alpha=0.9,linejoin = 'round') + ",
        "+ ",
        "  geom_text(aes(label=hour_demand), lineheight=2, size=3.2) +",
        "+ ",
        "  scale_fill_gradientn(colors = hcl.colors(25, 'Heat', rev=T)) +",
        "+ ",
        "  scale_x_continuous(breaks = seq(0,23,1)) +",
        "+ ",
        "  theme_light() +",
        "+ ",
        "  theme(legend.position = 'none', panel.grid = element_blank(),",
        "+ ",
        "        line = element_line(size=1)) +",
        "+ ",
        "  labs(title='Average Hourly Rides per Day of the Week', x='Hour', y='Day of Week')",
        "> ",
        "bike_rides %>%",
        "+ ",
        "  group_by(hire_hour, hire_date) %>%",
        "+ ",
        "  summarise(total=n()) %>%",
        "+ ",
        "  group_by(hire_hour) %>%",
        "+ ",
        "  summarise(Hourly_rides = mean(total)) %>%",
        "+ ",
        "  ggplot(aes(x=hire_hour, y=Hourly_rides)) +",
        "+ ",
        "  geom_line(color='steelblue') +",
        "+ ",
        "  theme_light() +",
        "+ ",
        "  theme(panel.grid = element_blank()) +",
        "+ ",
        "  scale_x_continuous(breaks = seq(0,23,1)) +",
        "+ ",
        "  scale_y_continuous(breaks=seq(0,500,50)) +",
        "+ ",
        "  labs(title='Average Hourly Bike Rides', x='Hour of the Day', y='Average Ride')",
        "> ",
        "bike_rides %>%",
        "+ ",
        "  group_by(hire_hour, hire_date) %>%",
        "+ ",
        "  summarise(total=n()) %>%",
        "+ ",
        "  group_by(hire_hour) %>%",
        "+ ",
        "  summarise(Hourly_rides = mean(total)) %>%",
        "+ ",
        "  ggplot(aes(x=hire_hour, y=Hourly_rides)) +",
        "+ ",
        "  geom_line(color='steelblue') +",
        "+ ",
        "  theme_light() +",
        "+ ",
        "  theme(panel.grid = element_blank()) +",
        "+ ",
        "  scale_x_continuous(breaks = seq(0,23,1)) +",
        "+ ",
        "  scale_y_continuous(breaks=seq(0,500,50)) +",
        "+ ",
        "  labs(title='Average Hourly Bike Rides', x='Hour', y='Average Ride')",
        "> ",
        "# total monthly rides per month of the year",
        "> ",
        "total_monthly_rides <- bike_rides %>%",
        "+ ",
        "  group_by(month_year=floor_date(hire_date, 'month')) %>%",
        "+ ",
        "  summarise(total_rides=n()) ",
        "> ",
        "",
        "> ",
        "# plot",
        "> ",
        "total_monthly_rides %>%",
        "+ ",
        "  ggplot(aes(month_year, total_rides/1000)) + ",
        "+ ",
        "  geom_col(fill='steelblue', color='black') +",
        "+ ",
        "  geom_text(aes(month_year, total_rides/1000, label=paste0(total_rides %/% 1000,'k'), vjust=-0.5), size=3) + ",
        "+ ",
        "  geom_hline(yintercept = mean(total_monthly_rides$total_rides)%/%1000, lty='dashed', color='red') + ",
        "+ ",
        "  theme_light() +",
        "+ ",
        "  theme(axis.text.x = element_text(angle=90), ",
        "+ ",
        "        panel.grid = element_blank(), ",
        "+ ",
        "        axis.text.y = element_blank(),",
        "+ ",
        "        axis.ticks.y = element_blank()) +",
        "+ ",
        "  labs(title='Total Monthly Demand (Jan. 2019 - Dec. 2020)', ",
        "+ ",
        "       x='Date', y='Total Demand (in Thousands)') + ",
        "+ ",
        "  scale_x_continuous(breaks = seq.Date(as.Date('2019-01-01'), as.Date('2020-12-01'), by = 'month'))",
        "> ",
        "View(total_monthly_rides)",
        "> ",
        "# total monthly rides per month of the year",
        "> ",
        "total_monthly_rides <- bike_rides %>%",
        "+ ",
        "  group_by(month_year=floor_date(hire_date, 'month')) %>%",
        "+ ",
        "  summarise(total_rides=n()) ",
        "> ",
        "",
        "> ",
        "# plot",
        "> ",
        "total_monthly_rides %>%",
        "+ ",
        "  ggplot(aes(month_year, total_rides/1000)) + ",
        "+ ",
        "  geom_col(fill='steelblue', color='black') +",
        "+ ",
        "  geom_text(aes(month_year, total_rides/1000, label=paste0(total_rides %/% 1000,'k'), vjust=-0.5), size=3) + ",
        "+ ",
        "  geom_hline(yintercept = mean(total_monthly_rides$total_rides)%/%1000, lty='dashed', color='red') + ",
        "+ ",
        "  theme_light() +",
        "+ ",
        "  theme(axis.text.x = element_text(angle=90), ",
        "+ ",
        "        panel.grid = element_blank(), ",
        "+ ",
        "        axis.text.y = element_blank(),",
        "+ ",
        "        axis.ticks.y = element_blank()) +",
        "+ ",
        "  labs(title='Total Monthly Rides (Jan. 2019 - Dec. 2020)', ",
        "+ ",
        "       x='Date', y='Total Rides (in Thousands)') + ",
        "+ ",
        "  scale_x_continuous(breaks = seq.Date(as.Date('2019-01-01'), as.Date('2020-12-01'), by = 'month'))",
        "> ",
        "View(total_monthly_rides)",
        "(*) NOTE: I saw chunk options \" fig.cap='fig.align='center', fig.height=5, fig.width=9\"\n please go to https://yihui.org/knitr/options\n (it is likely that you forgot to quote \"character\" options)\n",
        "> ",
        "# Hourly rides by day of the week ",
        "> ",
        "bike_rides %>%",
        "+ ",
        "  group_by(hire_hour, hire_wkday, hire_date) %>%",
        "+ ",
        "  summarise(total=n()) %>%",
        "+ ",
        "  group_by(hire_hour, hire_wkday) %>%",
        "+ ",
        "  summarise(hour_rides=as.integer(mean(total))) %>%",
        "+ ",
        "  ggplot(aes(x=hire_hour, y=hire_wkday, fill=hour_rides)) +",
        "+ ",
        "  geom_tile(alpha=0.9, linejoin = 'round') + ",
        "+ ",
        "  geom_text(aes(label=hour_rides), lineheight=2, size=3.2) +",
        "+ ",
        "  scale_fill_gradientn(colors = hcl.colors(15, 'Heat', rev=T)) +",
        "+ ",
        "  scale_x_continuous(breaks = seq(0,23,1)) +",
        "+ ",
        "  theme_light() +",
        "+ ",
        "  theme(legend.position = 'none', panel.grid = element_blank(),",
        "+ ",
        "        line = element_line(size=1)) +",
        "+ ",
        "  labs(title='Average Hourly Rides per Day of the Week', x='Hour', y='Day of Week')",
        "> ",
        "# Hourly rides by day of the week ",
        "> ",
        "bike_rides %>%",
        "+ ",
        "  group_by(hire_hour, hire_wkday, hire_date) %>%",
        "+ ",
        "  summarise(total=n()) %>%",
        "+ ",
        "  group_by(hire_hour, hire_wkday) %>%",
        "+ ",
        "  summarise(hour_rides=as.integer(mean(total))) %>%",
        "+ ",
        "  ggplot(aes(x=hire_hour, y=hire_wkday, fill=hour_rides)) +",
        "+ ",
        "  geom_tile(alpha=0.9, linejoin = 'round') + ",
        "+ ",
        "  geom_text(aes(label=hour_rides), lineheight=2, size=3.2) +",
        "+ ",
        "  scale_fill_gradientn(colors = hcl.colors(15, 'Heat', rev=T)) +",
        "+ ",
        "  scale_x_continuous(breaks = seq(0,23,1)) +",
        "+ ",
        "  theme_light() +",
        "+ ",
        "  theme(legend.position = 'none', panel.grid = element_blank(),",
        "+ ",
        "        line = element_line(size=1)) +",
        "+ ",
        "  labs(title='Average Hourly Rides per Day of the Week', x='Hour', y='Day of Week')",
        "> ",
        "# Hourly rides by day of the week ",
        "> ",
        "bike_rides %>%",
        "+ ",
        "  group_by(hire_hour, hire_wkday, hire_date) %>%",
        "+ ",
        "  summarise(total=n()) %>%",
        "+ ",
        "  group_by(hire_hour, hire_wkday) %>%",
        "+ ",
        "  summarise(hour_rides=as.integer(mean(total))) %>%",
        "+ ",
        "  ggplot(aes(x=hire_hour, y=hire_wkday, fill=hour_rides)) +",
        "+ ",
        "  geom_tile(alpha=0.9, linejoin = 'round') + ",
        "+ ",
        "  geom_text(aes(label=hour_rides), lineheight=2, size=3.2) +",
        "+ ",
        "  scale_fill_gradientn(colors = hcl.colors(15, 'Plasma', rev=T)) +",
        "+ ",
        "  scale_x_continuous(breaks = seq(0,23,1)) +",
        "+ ",
        "  theme_light() +",
        "+ ",
        "  theme(legend.position = 'none', panel.grid = element_blank(),",
        "+ ",
        "        line = element_line(size=1)) +",
        "+ ",
        "  labs(title='Average Hourly Rides per Day of the Week', x='Hour', y='Day of Week')",
        "> ",
        "# Hourly rides by day of the week ",
        "> ",
        "bike_rides %>%",
        "+ ",
        "  group_by(hire_hour, hire_wkday, hire_date) %>%",
        "+ ",
        "  summarise(total=n()) %>%",
        "+ ",
        "  group_by(hire_hour, hire_wkday) %>%",
        "+ ",
        "  summarise(hour_rides=as.integer(mean(total))) %>%",
        "+ ",
        "  ggplot(aes(x=hire_hour, y=hire_wkday, fill=hour_rides)) +",
        "+ ",
        "  geom_tile(alpha=0.9, linejoin = 'round') + ",
        "+ ",
        "  geom_text(aes(label=hour_rides), lineheight=2, size=3.2) +",
        "+ ",
        "  scale_fill_gradientn(colors = hcl.colors(15, 'Hawaii', rev=T)) +",
        "+ ",
        "  scale_x_continuous(breaks = seq(0,23,1)) +",
        "+ ",
        "  theme_light() +",
        "+ ",
        "  theme(legend.position = 'none', panel.grid = element_blank(),",
        "+ ",
        "        line = element_line(size=1)) +",
        "+ ",
        "  labs(title='Average Hourly Rides per Day of the Week', x='Hour', y='Day of Week')",
        "> ",
        "# Hourly rides by day of the week ",
        "> ",
        "bike_rides %>%",
        "+ ",
        "  group_by(hire_hour, hire_wkday, hire_date) %>%",
        "+ ",
        "  summarise(total=n()) %>%",
        "+ ",
        "  group_by(hire_hour, hire_wkday) %>%",
        "+ ",
        "  summarise(hour_rides=as.integer(mean(total))) %>%",
        "+ ",
        "  ggplot(aes(x=hire_hour, y=hire_wkday, fill=hour_rides)) +",
        "+ ",
        "  geom_tile(alpha=0.9, linejoin = 'round') + ",
        "+ ",
        "  geom_text(aes(label=hour_rides), lineheight=2, size=3.2) +",
        "+ ",
        "  scale_fill_gradientn(colors = hcl.colors(15, 'Heat', rev=T)) +",
        "+ ",
        "  scale_x_continuous(breaks = seq(0,23,1)) +",
        "+ ",
        "  theme_light() +",
        "+ ",
        "  theme(legend.position = 'none', panel.grid = element_blank(),",
        "+ ",
        "        line = element_line(size=1)) +",
        "+ ",
        "  labs(title='Average Hourly Rides per Day of the Week', x='Hour', y='Day of Week')",
        "(*) NOTE: I saw chunk options \" fig.cap='Average Weekly Rides by Start Stations by number of bikes in station\"\n please go to https://yihui.org/knitr/options\n (it is likely that you forgot to quote \"character\" options)\n",
        "> ",
        "# plot",
        "> ",
        "station_weekly_rides %>%",
        "+ ",
        "  ggplot() +",
        "+ ",
        "  geom_point(aes(x=start_long, y=start_lat, color=num_bike_bin, size=weekly_rides),alpha=0.5) +",
        "+ ",
        "  theme_light() +",
        "+ ",
        "  theme(panel.grid = element_blank(),",
        "+ ",
        "        legend.key.size = unit(0.8, 'cm'),",
        "+ ",
        "        legend.position = 'top') +",
        "+ ",
        "  labs(title='Start Stations Average Weekly Rides vs number of bikes', x='Longitude', y='Latitude') +",
        "+ ",
        "  scale_color_manual(values=c('<10'='darkblue', '10-15'='orange', '16+'='red')) +",
        "+ ",
        "  guides(size='none', color=guide_legend(title='NumBikes Group', size=10))",
        "Error in ggplot(.) : object 'station_weekly_rides' not found\n",
        "(*) NOTE: I saw chunk options \" fig.cap='Average Weekly Rides by Start Stations by number of bikes in station\"\n please go to https://yihui.org/knitr/options\n (it is likely that you forgot to quote \"character\" options)\n",
        "> ",
        "station_weekly_rides <- bike_rides %>%",
        "+ ",
        "  # total rides per week",
        "+ ",
        "  group_by(hire_week=floor_date(hire_date,'week'), terminal_number, start_station_name, start_lat, start_long) %>%",
        "+ ",
        "  summarise(total=n()) %>%",
        "+ ",
        "  # average demand by station per week",
        "+ ",
        "  group_by(terminal_number, start_station_name, start_lat, start_long) %>%",
        "+ ",
        "  summarise(weekly_rides= as.integer(mean(total))) %>%",
        "+ ",
        "  inner_join(select(stations, terminal_number, number_of_bikes), by='terminal_number') %>%",
        "+ ",
        "  # bin by number of bikes in each station",
        "+ ",
        "  mutate(num_bike_bin=cut(number_of_bikes, breaks=c(-1,10,16,40), labels=c('<10', '10-15', '16+'), ",
        "+ ",
        "                          right=FALSE, ordered_result=T)) %>%",
        "+ ",
        "  ungroup()",
        "(*) NOTE: I saw chunk options \" fig.cap='Average Weekly Rides by Start Stations by number of bikes in station\"\n please go to https://yihui.org/knitr/options\n (it is likely that you forgot to quote \"character\" options)\n",
        "> ",
        "# plot",
        "> ",
        "station_weekly_rides %>%",
        "+ ",
        "  ggplot() +",
        "+ ",
        "  geom_point(aes(x=start_long, y=start_lat, color=num_bike_bin, size=weekly_rides),alpha=0.5) +",
        "+ ",
        "  theme_light() +",
        "+ ",
        "  theme(panel.grid = element_blank(),",
        "+ ",
        "        legend.key.size = unit(0.8, 'cm'),",
        "+ ",
        "        legend.position = 'top') +",
        "+ ",
        "  labs(title='Start Stations Average Weekly Rides vs number of bikes', x='Longitude', y='Latitude') +",
        "+ ",
        "  scale_color_manual(values=c('<10'='darkblue', '10-15'='orange', '16+'='red')) +",
        "+ ",
        "  guides(size='none', color=guide_legend(title='NumBikes Group', size=10))",
        "\nRestarting R session...\n\n"
    ]
}